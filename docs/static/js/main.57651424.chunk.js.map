{"version":3,"sources":["components/Form.js","components/Task.js","components/App.js","index.js"],"names":["Form","makeTask","useState","name","type","date","description","task","updateTask","error","updateError","handleStage","e","target","value","className","onSubmit","preventDefault","trim","id","uuid","placeholder","onChange","Task","removeTask","onClick","App","newTasks","JSON","parse","localStorage","getItem","tasks","handleTask","useEffect","setItem","stringify","newTask","filter","title","length","map","key","ReactDOM","render","document","getElementById"],"mappings":"uPA2GeA,EAvGF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAGCC,mBAAS,CACnCC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,YAAa,KAPY,mBAGnBC,EAHmB,KAGbC,EAHa,OAUEN,oBAAS,GAVX,mBAUrBO,EAVqB,KAUdC,EAVc,KAYvBC,EAAc,SAAAC,GAClBJ,EAAW,eACND,EADK,eAEPK,EAAEC,OAAOV,KAAQS,EAAEC,OAAOC,UA0BvBX,EAAkCI,EAAlCJ,KAAMC,EAA4BG,EAA5BH,KAAMC,EAAsBE,EAAtBF,KAAMC,EAAgBC,EAAhBD,YAGxB,OAEE,kBAAC,WAAD,KACA,8CACCG,EAAQ,uBAAGM,UAAU,gBAAb,qCAAoE,KAC7E,0BACEC,SA/Ba,SAAAJ,GACbA,EAAEK,iBAEiB,KAAhBd,EAAKe,QAAiC,KAAhBd,EAAKc,QAAiC,KAAhBb,EAAKa,QAAwC,KAAvBZ,EAAYY,QAI/ER,GAAY,GAGdH,EAAKY,GAAKC,MAEVnB,EAASM,GAETC,EAAW,CACTL,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,YAAa,MAdbI,GAAY,KA6Bd,+CACA,2BACEN,KAAK,OACLD,KAAK,OACLY,UAAU,eACVM,YAAY,eACZC,SAAUX,EACVG,MAAOX,IAGT,6CACA,2BACEC,KAAK,OACLD,KAAK,OACLY,UAAU,eACVM,YAAY,gBACZC,SAAUX,EACVG,MAAOV,IAGT,wCACA,2BACEA,KAAK,OACLD,KAAK,OACLY,UAAU,eACVO,SAAUX,EACVG,MAAOT,IAGT,iDACA,8BACEU,UAAU,eACVZ,KAAK,cACLmB,SAAUX,EACVG,MAAOR,IAGT,4BACEF,KAAK,SACLW,UAAU,4BAFZ,oBCnESQ,EAtBF,SAAC,GAAwB,IAAvBhB,EAAsB,EAAtBA,KAAMiB,EAAgB,EAAhBA,WAEnB,OACE,yBAAKT,UAAU,QACb,2BAAIR,EAAKJ,MACT,2BAAII,EAAKH,MACT,2BAAIG,EAAKF,MACT,8BAAOE,EAAKD,aACZ,4BACES,UAAU,+BACVU,QAAS,kBAAMD,EAAWjB,EAAKY,MAFjC,mB,KCyDSO,MAhEf,WAGE,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAC1CJ,IACHA,EAAW,IALA,MAQezB,mBAASyB,GARxB,mBAQNK,EARM,KAQCC,EARD,KAUbC,qBAAW,WACMN,KAAKC,MAAMC,aAAaC,QAAQ,UAG7CD,aAAaK,QAAQ,QAASP,KAAKQ,UAAUJ,IAE7CF,aAAaK,QAAQ,QAASP,KAAKQ,UAAU,OAE9C,CAACJ,IAEN,IASMR,EAAa,SAAAL,GACjB,IAAMkB,EAAUL,EAAMM,QAAQ,SAAA/B,GAAI,OAAIA,EAAKY,KAAOA,KAClDc,EAAWI,IAGPE,EAAyB,IAAjBP,EAAMQ,OAAe,gBAAkB,kBAEnD,OACE,kBAAC,WAAD,KACE,wCACA,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CACEd,SAvBG,SAAAM,GACf0B,EAAW,GAAD,mBACLD,GADK,CAERzB,SAuBM,yBAAKQ,UAAU,mBACb,4BAAKwB,GACJP,EAAMS,KAAK,SAAAlC,GAAI,OACd,kBAAC,EAAD,CACEA,KAAMA,EACNmC,IAAKnC,EAAKY,GACVK,WAAYA,YCnD5BmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.57651424.chunk.js","sourcesContent":["import React, {Fragment, useState } from 'react';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types'\n\nconst Form = ({makeTask}) => {\n\n\n  const [ task, updateTask] = useState({\n    name: '',\n    type: '',\n    date: '',\n    description: ''\n});\n\nconst [ error, updateError ] = useState(false)\n\nconst handleStage = e => {\n  updateTask({\n    ...task,\n    [e.target.name] : e.target.value\n  })\n}\n\nconst submitTask = e => {\n      e.preventDefault()\n\n      if(name.trim() === '' || type.trim() === '' || date.trim() === '' || description.trim() === '') {\n        updateError(true)\n        return; \n      } else {\n        updateError(false)\n      }\n\n      task.id = uuid()\n\n      makeTask(task)\n\n      updateTask({\n        name: '',\n        type: '',\n        date: '',\n        description: ''\n      })\n}\n\nconst { name, type, date, description } = task;\n\n\n  return (\n\n    <Fragment>\n    <h2>Crea una tarea</h2>\n    {error ? <p className='alerta-error'>Todos los campos son obligatorios</p> : null}\n    <form\n      onSubmit={submitTask}\n    >\n      <label>Nombre Tarea</label>\n      <input \n        type='text'\n        name='name'\n        className='u-full-width'\n        placeholder='Nombre tarea'\n        onChange={handleStage}\n        value={name}\n      />\n\n      <label>Tipo Tarea</label>\n      <input \n        type='text'\n        name='type'\n        className='u-full-width'\n        placeholder='Tipo de tarea'\n        onChange={handleStage}\n        value={type}\n      />\n\n      <label>Fecha</label>\n      <input \n        type='date'\n        name='date'\n        className='u-full-width'\n        onChange={handleStage}\n        value={date}\n      />\n\n      <label>Descripci√≥n</label>\n      <textarea\n        className='u-full-width'\n        name='description'\n        onChange={handleStage}\n        value={description}\n      ></textarea>\n\n      <button\n        type='submit'\n        className='u-full-width button-form'\n      >Agregar Tarea</button>\n    </form>\n</Fragment>\n\n  )\n}\n\nForm.propTypes = {\n  makeTask: PropTypes.func.isRequired\n}\n\nexport default Form","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Task = ({task, removeTask}) => {\n\n  return (\n    <div className='task'>\n      <p>{task.name}</p>\n      <p>{task.type}</p>\n      <p>{task.date}</p>\n      <span>{task.description}</span>\n      <button\n        className='button eliminar u-full-width'\n        onClick={() => removeTask(task.id)}\n        >ELIMINAR &times;</button>\n    </div>\n  );\n\n}\n\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n  removeTask: PropTypes.func.isRequired\n}\n\nexport default Task","import React, { Fragment, useState, useEffect } from \"react\";\nimport Form from './Form'\nimport Task from './Task'\nimport '../styles/App.css';\n\nfunction App() {\n\n\n  let newTasks = JSON.parse(localStorage.getItem('tasks'));\n  if (!newTasks) {\n    newTasks = []\n  }\n\n  const [tasks, handleTask] = useState(newTasks)\n\n  useEffect( () => {\n    let newTasks = JSON.parse(localStorage.getItem('tasks'));\n\n    if(newTasks) {\n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    } else {\n      localStorage.setItem('tasks', JSON.stringify([]));\n    }\n  }, [tasks]);\n\nconst makeTask = task => {\n  handleTask([\n    ...tasks,\n    task\n  ])\n}\n\n\n\nconst removeTask = id => {\n  const newTask = tasks.filter( task => task.id !== id);\n  handleTask(newTask)\n} \n\nconst title = tasks.length === 0 ? 'no hay tareas' : 'lista de tareas'\n\n  return (\n    <Fragment>\n      <h1>Task App</h1>\n      <div className=\"container\">\n        <div className='row'>\n          <div className='one-half column'>\n            <Form \n              makeTask= {makeTask}\n            />\n          </div>\n          <div className='one-half column'>\n            <h2>{title}</h2>\n            {tasks.map( task => (\n              <Task \n                task={task}\n                key={task.id}\n                removeTask={removeTask}\n              />\n            ))}\n           \n          </div>\n        </div>  \n      </div>\n    </Fragment>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport './styles/App.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}